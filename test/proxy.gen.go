//
// This code was generated by ferry tool.
//
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//
// 2019-08-26 16:18:48
//

package main

import (
	"github.com/muguangyi/ferry"
)

// IGame from: game.go
type igameproxy struct {
	slot ferry.ISlot
}

func (p *igameproxy) Start(level string) {
	err := p.slot.Call("IGame", "Start", level)

	if nil != err {
		return
	}
}

// end IGame

// ILobby from: lobby.go
type ilobbyproxy struct {
	slot ferry.ISlot
}

// end ILobby

// IMath from: math.go
type imathproxy struct {
	slot ferry.ISlot
}

func (p *imathproxy) Add(x float64, y float64) float64 {
	results, err := p.slot.CallWithResult("IMath", "Add", x, y)

	if nil != err {
		return 0
	}

	return results[0].(float64)
}

func (p *imathproxy) Print(msg string) {
	err := p.slot.Call("IMath", "Print", msg)

	if nil != err {
		return
	}
}

// end IMath

// ILogin from: sub\login.go
type iloginproxy struct {
	slot ferry.ISlot
}

func (p *iloginproxy) Login(name string, pwd string) bool {
	results, err := p.slot.CallWithResult("ILogin", "Login", name, pwd)

	if nil != err {
		return false
	}

	return results[0].(bool)
}

func (p *iloginproxy) Logout() {
	err := p.slot.Call("ILogin", "Logout")

	if nil != err {
		return
	}
}

// end ILogin

// Register to ferry
var (
	igameproxysucc  bool = ferry.Register("IGame", func(slot ferry.ISlot) interface{} { return &igameproxy{slot: slot} })
	ilobbyproxysucc bool = ferry.Register("ILobby", func(slot ferry.ISlot) interface{} { return &ilobbyproxy{slot: slot} })
	imathproxysucc  bool = ferry.Register("IMath", func(slot ferry.ISlot) interface{} { return &imathproxy{slot: slot} })
	iloginproxysucc bool = ferry.Register("ILogin", func(slot ferry.ISlot) interface{} { return &iloginproxy{slot: slot} })
)
